apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {

    compileSdkVersion 30
    defaultConfig {

        applicationId "com.nicare.ves"
        minSdkVersion 21
        multiDexEnabled true
        targetSdkVersion 30

        versionCode 11
        versionName "2.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a"
        }

    }

    buildTypes {

        debug {
            minifyEnabled true
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            debuggable false
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // Do NOT compress tflite model files (need to call out to developers!)
    aaptOptions {
        noCompress "tflite"
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    aaptOptions {
        noCompress "tflite"
    }

    sourceSets.main {
        assets.srcDirs = ['assets']
    }
}
//crashlytics {
//    enableNdk true
//}
repositories {
    maven { url 'https://google.bintray.com/tensorflow' }
}

androidExtensions {
    experimental = true
}

dependencies {

    implementation 'com.google.android.material:material:1.3.0-alpha01'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72'

// Barcode model
//    implementation 'com.google.mlkit:barcode-scanning:16.0.0'

    // Object detection feature with bundled default classifier
//    implementation 'com.google.mlkit:object-detection:16.0.0'

    // Object detection feature with custom classifier support
//    implementation 'com.google.mlkit:object-detection-custom:16.0.0'

    // Face features
//    implementation 'com.google.mlkit:face-detection:16.0.0'
//    implementation 'com.google.android.gms:play-services-mlkit-face-detection:16.1.1'
    implementation 'com.google.mlkit:face-detection:16.0.2'

    // Text features
//    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:16.0.0'

    // Image labeling with automl model support
//    implementation 'com.google.mlkit:image-labeling-automl:16.0.0'

    // Image labeling
//    implementation 'com.google.mlkit:image-labeling:16.0.0'

    // Image labeling custom
//    implementation 'com.google.mlkit:image-labeling-custom:16.0.0'

    implementation 'com.google.guava:guava:17.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'
//    implementation 'com.google.firebase:firebase-ml-vision:24.1.0'

//    implementation 'com.google.firebase:firebase-ml-vision:24.0.0'
//    implementation 'com.google.guava:guava:17.0'

    // For how to setup gradle dependencies in Android X, see:
    // https://developer.android.com/training/testing/set-up-project#gradle-dependencies
    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.2.0"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // CameraX
    implementation "androidx.camera:camera-camera2:1.0.0-beta04"
    implementation "androidx.camera:camera-lifecycle:1.0.0-beta04"
    implementation "androidx.camera:camera-view:1.0.0-alpha11"

//    Bar codes
    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.core:core-ktx:1.3.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation 'androidx.preference:preference:1.1.1'

    def lifecycle_version = "2.2.0"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
//    implementation "android.arch.persistence.room:rxjava2:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    implementation 'androidx.gridlayout:gridlayout:1.0.0'

    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'

    implementation 'com.squareup.retrofit2:retrofit:2.7.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0"
    implementation "com.squareup.okhttp3:okhttp:4.9.1"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:3.0.1"

    //implementation 'com.google.android.gms:play-services-vision:11.8.0'
    implementation files('libs/dpuareu.jar')
    //implementation files('libs/fgtitlibs.jar')
    implementation 'com.github.drawers:SpinnerDatePicker:2.0.1'
    //implementation 'com.mindorks.android:prdownloader:0.6.0'

//    implementation 'com.wonderkiln:camerakit:0.13.0'
    implementation 'com.github.d-max:spots-dialog:1.1@aar'

//    implementation 'com.camerakit:camerakit:1.0.0-beta3.11'
//    implementation 'com.camerakit:jpegkit:0.1.0'
//    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.71'
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0'
    implementation 'com.github.CameraKit:camerakit-android:v0.13.5'
    implementation 'com.github.CameraKit:jpegkit-android:v0.2.2'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.0'

    implementation 'com.github.tiper:MaterialSpinner:1.4.1'
//    implementation 'me.dm7.barcodescanner:zxing:1.9.8'

    // Reactive streams (convert observables to live data)
    def reactive_streams_version = "1.2.1"
    implementation "android.arch.lifecycle:reactivestreams:$reactive_streams_version"

    // (Java only)
    def work_version = "2.4.0"
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-rxjava2:$work_version"

    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    // (see https://github.com/ReactiveX/RxJava/releases for latest 2.x.x version)
    implementation 'io.reactivex.rxjava2:rxjava:2.2.14'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.facebook.shimmer:shimmer:0.1.0@aar'
    implementation 'com.commonsware.cwac:saferoom.x:1.2.1'

    // Dagger2
    def dagger_version = "2.24"
    implementation "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"

    // Glide
//    def glide_version = "4.8.0"
//    implementation "com.github.bumptech.glide:glide:$glide_version"
//    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"


    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:26.1.0')

    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'

    implementation files('libs/AlCamera.jar')
//    implementation files('libs/sourceafis-3.17.1.jar')
    implementation 'com.github.LintraMax:SourceAFIS-Android:v3.10.0'

    implementation files('libs/FDxSDKProFDAndroid.jar')
}
android {
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    buildToolsVersion '29.0.1'
}
configurations {
    // Resolves dependency conflict caused by some dependencies use
    // com.google.guava:guava and com.google.guava:listenablefuture together.
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}
